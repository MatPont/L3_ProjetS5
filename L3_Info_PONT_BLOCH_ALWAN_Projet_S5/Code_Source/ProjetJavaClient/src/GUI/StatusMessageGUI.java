/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.NavigableSet;
import java.util.TreeMap;
import java.util.TreeSet;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import Client.*;

public class StatusMessageGUI extends javax.swing.JFrame {

    private Map<EnumStatusMessage, NavigableSet<Utilisateur>> listeStatus;
    private int x, y;
    static int width = 300;
    /**
     * Creates new form OptionPane2
     */
    public StatusMessageGUI(Map<EnumStatusMessage, NavigableSet<Utilisateur>> listeStatus, int x, int y, int nbUser) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StatusMessageGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StatusMessageGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StatusMessageGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StatusMessageGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    	
        this.listeStatus=listeStatus;
        int hauteur = 27+(int)(nbUser*17);
        if(hauteur > 500)
        	hauteur = 500;
        this.x=x;
        this.y=y-hauteur;
        this.setUndecorated(true);
        this.setVisible(true);
        initComponents();
        this.setSize(width,hauteur);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="InitComponents">                          
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        int taille=0;
        for(NavigableSet<Utilisateur> N : listeStatus.values()){
            taille += N.size();
        }
        Object[][] table=new Object[taille][2];  
        int cpt=0;
    
            NavigableSet<Utilisateur> utilisateurs = listeStatus.get(EnumStatusMessage.LU);
            for(Utilisateur u : utilisateurs){
                table[cpt][0] = u.getPrenom()+" "+u.getNom();
                table[cpt][1] = "Lu";          
                cpt++;
            }
            utilisateurs = listeStatus.get(EnumStatusMessage.RECU);
            for(Utilisateur u : utilisateurs){
                table[cpt][0] = u.getPrenom()+" "+u.getNom();
                table[cpt][1] = "Recu";     
                cpt++;
            }
            utilisateurs = listeStatus.get(EnumStatusMessage.ENATTENTE);
            for(Utilisateur u : utilisateurs){
                table[cpt][0] = u.getPrenom()+" "+u.getNom();
                table[cpt][1] = "En attente";    
                cpt++;
            }
      
        
        String [] s = {"Utilisateurs", "Status"};
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            table, s){
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setDefaultRenderer(Object.class, new jTableRender());
        jScrollPane1.setViewportView(jTable1);
        jScrollPane1.setPreferredSize(new Dimension(500,21*taille));
        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);
        getContentPane().setBackground(Color.WHITE);
        jScrollPane1.getViewport().setBackground(Color.WHITE);
        jTable1.setEnabled(false);
        this.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
                thisFocusLost(evt);
            }
        });
        pack();
        this.setLocation(x, y);
    }// </editor-fold>                        

    private void thisFocusLost(java.awt.event.FocusEvent evt) {                                  
        dispose();
    }                                 

public class jTableRender extends DefaultTableCellRenderer {
 
    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        /**
         * Fixer la couleur de fond de la première colonne en blanc
         */
 
        /**
         * Colorier les cellules en orange si le montant est négatif
         */
        Object o = table.getValueAt(row, 1);
        if (o != null && component instanceof JLabel) {
            JLabel label = (JLabel) component;
            if (label.getText().contains("En attente")) {
                Color clr = new Color(255, 165, 165);
                component.setBackground(clr);
            }
            if (label.getText().contains("Recu")) {
                Color clr = new Color(255, 226, 150);
                component.setBackground(clr);
            }
            if (label.getText().contains("Lu")) {
                Color clr = new Color(51, 204, 0);
                component.setBackground(clr);
            }
        }
        if(column==0){
            Color clr = new Color(255, 255, 255);
            component.setBackground(clr);
        }
        return component;
    }
}

    // Variables declaration - do not modify                     
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration                   
}
